(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{628:function(t,s,a){t.exports=a.p+"assets/img/006.162af566.png"},730:function(t,s,a){"use strict";a.r(s);var e=a(15),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"_1-vuex-的原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-vuex-的原理"}},[t._v("#")]),t._v(" 1. Vuex 的原理")]),t._v(" "),e("p",[t._v("Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。每一个 Vuex 应用的核心就是 store（仓库）。“store” 基本上就是一个容器，它包含着你的应用中大部分的状态 ( state )。")]),t._v(" "),e("ul",[e("li",[t._v("Vuex 的状态存储是响应式的。当 Vue 组件从 store 中读取状态的时候，若 store 中的状态发生变化，那么相应的组件也会相应地得到高效更新。")]),t._v(" "),e("li",[t._v("改变 store 中的状态的唯一途径就是显式地提交 (commit) mutation。这样可以方便地跟踪每一个状态的变化。")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(628),alt:""}})]),t._v(" "),e("p",[t._v("Vuex为Vue Components建立起了一个完整的生态圈，包括开发中的API调用一环。")]),t._v(" "),e("p",[t._v("(1) 核心流程中的主要功能：")]),t._v(" "),e("ul",[e("li",[t._v("Vue Components 是 vue 组件，组件会触发（dispatch）一些事件或动作，也就是图中的 Actions;")]),t._v(" "),e("li",[t._v("在组件中发出的动作，肯定是想获取或者改变数据的，但是在 vuex 中，数据是集中管理的，不能直接去更改数据，所以会把这个动作提交（Commit）到 Mutations 中;")]),t._v(" "),e("li",[t._v("然后 Mutations 就去改变（Mutate）State 中的数据;")]),t._v(" "),e("li",[t._v("当 State 中的数据被改变之后，就会重新渲染（Render）到 Vue Components 中去，组件展示更新后的数据，完成一个流程。")])]),t._v(" "),e("p",[t._v("(2) 各模块在核心流程中的主要功能：")]),t._v(" "),e("ul",[e("li",[t._v("Vue Components∶ Vue组件。HTML页面上，负责接收用户操作等交互行为，执行dispatch方法触发对应action进行回应。")]),t._v(" "),e("li",[t._v("dispatch∶操作行为触发方法，是唯一能执行action的方法。")]),t._v(" "),e("li",[t._v("actions∶ 操作行为处理模块。负责处理Vue Components接收到的所有交互行为。包含同步/异步操作，支持多个同名方法，按照注册的顺序依次触发。向后台API请求的操作就在这个模块中进行，包括触发其他action以及提交mutation的操作。该模块提供了Promise的封装，以支持action的链式触发。")]),t._v(" "),e("li",[t._v("commit∶状态改变提交操作方法。对mutation进行提交，是唯一能执行mutation的方法。")]),t._v(" "),e("li",[t._v("mutations∶状态改变操作方法。是Vuex修改state的唯一推荐方法，其他修改方式在严格模式下将会报错。该方法只能进行同步操作，且方法名只能全局唯一。操作之中会有一些hook暴露出来，以进行state的监控等。")]),t._v(" "),e("li",[t._v("state∶ 页面状态管理容器对象。集中存储Vuecomponents中data对象的零散数据，全局唯一，以进行统一的状态管理。页面显示所需的数据从该对象中进行读取，利用Vue的细粒度数据响应机制来进行高效的状态更新。")]),t._v(" "),e("li",[t._v("getters∶ state对象读取方法。图中没有单独列出该模块，应该被包含在了render中，Vue Components通过该方法读取全局state对象。")])]),t._v(" "),e("h2",{attrs:{id:"_2-vuex-和-localstorage-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-vuex-和-localstorage-的区别"}},[t._v("#")]),t._v(" 2.Vuex 和 localStorage 的区别")]),t._v(" "),e("p",[t._v("(1) 最重要的区别")]),t._v(" "),e("ul",[e("li",[t._v("vuex存储在内存中")]),t._v(" "),e("li",[t._v("localstorage 则以文件的方式存储在本地，只能存储字符串类型的数据，存储对象需要 JSON的stringify和parse方法进行处理。 读取内存比读取硬盘速度要快")])]),t._v(" "),e("p",[t._v("(2) 应用场景")]),t._v(" "),e("ul",[e("li",[t._v("Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。vuex用于组件之间的传值。")]),t._v(" "),e("li",[t._v("localstorage是本地存储，是将数据存储到浏览器的方法，一般是在跨页面传递数据时使用 。")]),t._v(" "),e("li",[t._v("Vuex能做到数据的响应式，localstorage不能")])]),t._v(" "),e("p",[t._v("(3) 永久性")]),t._v(" "),e("p",[t._v("刷新页面时vuex存储的值会丢失，localstorage不会。(可以本地持久存储客户登录信息)")]),t._v(" "),e("h2",{attrs:{id:"_3-vuex和单纯的全局对象有什么区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-vuex和单纯的全局对象有什么区别"}},[t._v("#")]),t._v(" 3.Vuex和单纯的全局对象有什么区别？")]),t._v(" "),e("ul",[e("li",[t._v("Vuex 的状态存储是响应式的。当 Vue 组件从 store 中读取状态的时候，若 store 中的状态发生变化，那么相应的组件也会相应地得到高效更新。")]),t._v(" "),e("li",[t._v("Vuex 的状态存储是响应式的。当 Vue 组件从 store 中读取状态的时候，若 store 中的状态发生变化，那么相应的组件也会相应地得到高效更新。")])]),t._v(" "),e("h2",{attrs:{id:"_4-为什么-vuex-的-mutation-中不能做异步操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-为什么-vuex-的-mutation-中不能做异步操作"}},[t._v("#")]),t._v(" 4.为什么 Vuex 的 mutation 中不能做异步操作？")]),t._v(" "),e("ul",[e("li",[t._v("Vuex中所有的状态更新的唯一途径都是mutation，异步操作通过 Action 来提交 mutation实现，这样可以方便地跟踪每一个状态的变化，从而能够实现一些工具帮助更好地了解我们的应用。")]),t._v(" "),e("li",[t._v("每个mutation执行完成后都会对应到一个新的状态变更，这样devtools就可以打个快照存下来，然后就可以实现 time-travel 了。如果mutation支持异步操作，就没有办法知道状态是何时更新的，无法很好的进行状态的追踪，给调试带来困难。")])]),t._v(" "),e("h2",{attrs:{id:"_5-vuex的严格模式是什么-有什么作用-如何开启"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-vuex的严格模式是什么-有什么作用-如何开启"}},[t._v("#")]),t._v(" 5.Vuex的严格模式是什么,有什么作用，如何开启？")]),t._v(" "),e("p",[t._v("在严格模式下，无论何时发生了状态变更且不是由mutation函数引起的，将会抛出错误。这能保证所有的状态变更都能被调试工具跟踪到。")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vuex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Store")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("strict")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("h2",{attrs:{id:"_6-如何在组件中批量使用vuex的getter属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-如何在组件中批量使用vuex的getter属性"}},[t._v("#")]),t._v(" 6.如何在组件中批量使用Vuex的getter属性")]),t._v(" "),e("p",[t._v("使用mapGetters辅助函数, 利用对象展开运算符将getter混入computed 对象中")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("mapGetters"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vuex'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("computed")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapGetters")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'total'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'discountTotal'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("h2",{attrs:{id:"_7-如何在组件中重复使用vuex的mutation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-如何在组件中重复使用vuex的mutation"}},[t._v("#")]),t._v(" 7. 如何在组件中重复使用Vuex的mutation")]),t._v(" "),e("p",[t._v("使用mapMutations辅助函数,在组件中这么使用")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" mapMutations "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vuex'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("methods")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapMutations")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("setNumber")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SET_NUMBER'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);