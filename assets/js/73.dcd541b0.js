(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{678:function(t,_,v){"use strict";v.r(_);var r=v(15),e=Object(r.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"_1-对浏览器的理解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-对浏览器的理解"}},[t._v("#")]),t._v(" 1. 对浏览器的理解")]),t._v(" "),v("p",[t._v("浏览器的主要功能是将用户选择的 web 资源呈现出来，它需要从服务器请求资源，并将其显示在浏览器窗口中，资源的格式通常是 HTML，也包括 PDF、image 及其他格式。用户用 URI（Uniform Resource Identifier 统一资源标识符）来指定所请求资源的位置。")]),t._v(" "),v("p",[t._v("HTML 和 CSS 规范中规定了浏览器解释 html 文档的方式，由 W3C 组织对这些规范进行维护，W3C 是负责制定 web 标准的组织。但是浏览器厂商纷纷开发自己的扩展，对规范的遵循并不完善，这为 web 开发者带来了严重的兼容性问题。")]),t._v(" "),v("p",[t._v("浏览器可以分为两部分，shell 和 内核。其中 shell 的种类相对比较多，内核则比较少。也有一些浏览器并不区分外壳和内核。从 Mozilla 将 Gecko 独立出来后，才有了外壳和内核的明确划分。")]),t._v(" "),v("ul",[v("li",[t._v("shell 是指浏览器的外壳：例如菜单，工具栏等。主要是提供给用户界面操作，参数设置等等。它是调用内核来实现各种功能的。")]),t._v(" "),v("li",[t._v("内核是浏览器的核心。内核是基于标记语言显示内容的程序或模块。")])]),t._v(" "),v("h2",{attrs:{id:"_2-对浏览器内核的理解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-对浏览器内核的理解"}},[t._v("#")]),t._v(" 2.对浏览器内核的理解")]),t._v(" "),v("p",[t._v("浏览器内核主要分成两部分：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("渲染引擎")]),t._v("的职责就是渲染，即在浏览器窗口中显示所请求的内容。默认情况下，渲染引擎可以显示 html、xml 文档及图片，它也可以借助插件显示其他类型数据，例如使用 PDF 阅读器插件，可以显示 PDF 格式。")]),t._v(" "),v("li",[v("strong",[t._v("JS 引擎")]),t._v("：解析和执行 javascript 来实现网页的动态效果。")])]),t._v(" "),v("p",[t._v("最开始渲染引擎和 JS 引擎并没有区分的很明确，后来 JS 引擎越来越独立，内核就倾向于只指渲染引擎。")]),t._v(" "),v("h2",{attrs:{id:"_3-常见的浏览器内核"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-常见的浏览器内核"}},[t._v("#")]),t._v(" 3. 常见的浏览器内核")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("Trident")]),t._v("： 这种浏览器内核是 "),v("strong",[t._v("IE 浏览器")]),t._v("用的内核，因为在早期 IE 占有大量的市场份额，所以这种内核比较流行，以前有很多网页也是根据这个内核的标准来编写的，但是实际上这个内核对真正的网页标准支持不是很好。但是由于 IE 的高市场占有率，微软也很长时间没有更新 Trident 内核，就导致了 Trident 内核和 W3C 标准脱节。还有就是 Trident 内核的大量 Bug 等安全问题没有得到解决，加上一些专家学者公开自己认为 IE 浏览器不安全的观点，使很多用户开始转向其他浏览器。")]),t._v(" "),v("li",[v("strong",[t._v("Gecko")]),t._v("： 这是 "),v("strong",[t._v("Firefox 和 Flock")]),t._v(" 所采用的内核，这个内核的优点就是功能强大、丰富，可以支持很多复杂网页效果和浏览器扩展接口，但是代价是也显而易见就是要消耗很多的资源，比如内存。")]),t._v(" "),v("li",[v("strong",[t._v("Presto")]),t._v("： "),v("strong",[t._v("Opera")]),t._v(" 曾经采用的就是 Presto 内核，Presto 内核被称为公认的浏览网页速度最快的内核，这得益于它在开发时的天生优势，在处理 JS 脚本等脚本语言时，会比其他的内核快3倍左右，缺点就是为了达到很快的速度而丢掉了一部分网页兼容性。")]),t._v(" "),v("li",[v("strong",[t._v("Webkit")]),t._v("： Webkit 是 "),v("strong",[t._v("Safari")]),t._v(" 采用的内核，它的优点就是网页浏览速度较快，虽然不及 Presto 但是也胜于 Gecko 和 Trident，缺点是对于网页代码的容错性不高，也就是说对网页代码的兼容性较低，会使一些编写不标准的网页无法正确显示。WebKit 前身是 KDE 小组的 KHTML 引擎，可以说 WebKit 是 KHTML 的一个开源的分支。")]),t._v(" "),v("li",[v("strong",[t._v("Blink")]),t._v("： 谷歌在 Chromium Blog 上发表博客，称将与苹果的开源浏览器核心 Webkit 分道扬镳，在 Chromium 项目中研发 Blink 渲染引擎（即浏览器核心），内置于 Chrome 浏览器之中。其实 Blink 引擎就是 Webkit 的一个分支，就像 webkit 是KHTML 的分支一样。Blink 引擎现在是谷歌公司与 Opera Software 共同研发，上面提到过的，Opera 弃用了自己的 Presto 内核，加入 Google 阵营，跟随谷歌一起研发 Blink。")])]),t._v(" "),v("h2",{attrs:{id:"_4-浏览器的主要组成部分"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-浏览器的主要组成部分"}},[t._v("#")]),t._v(" 4.浏览器的主要组成部分")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("⽤户界⾯")]),t._v(" 包括地址栏、前进/后退按钮、书签菜单等。除了浏览器主窗⼝显示的您请求的⻚⾯外，其他显示的各个部分都属于⽤户界⾯。")]),t._v(" "),v("li",[v("strong",[t._v("浏览器引擎")]),t._v(" 在⽤户界⾯和呈现引擎之间传送指令。")]),t._v(" "),v("li",[v("strong",[t._v("呈现引擎")]),t._v(" 负责显示请求的内容。如果请求的内容是 HTML，它就负责解析 HTML 和 CSS 内容，并将解析后的内容显示在屏幕上。")]),t._v(" "),v("li",[v("strong",[t._v("⽹络")]),t._v(" ⽤于⽹络调⽤，⽐如 HTTP 请求。其接⼝与平台⽆关，并为所有平台提供底层实现。")]),t._v(" "),v("li",[v("strong",[t._v("⽤户界⾯后端")]),t._v(" ⽤于绘制基本的窗⼝⼩部件，⽐如组合框和窗⼝。其公开了与平台⽆关的通⽤接⼝，⽽在底层使⽤操作系统的⽤户界⾯⽅法。")]),t._v(" "),v("li",[v("strong",[t._v("JavaScript 解释器")]),t._v("。⽤于解析和执⾏ JavaScript 代码。")]),t._v(" "),v("li",[v("strong",[t._v("数据存储")]),t._v(" 这是持久层。浏览器需要在硬盘上保存各种数据，例如 Cookie。新的 HTML 规范 (HTML5) 定义了“⽹络数据库”，这是⼀个完整（但是轻便）的浏览器内数据库。")])])])}),[],!1,null,null,null);_.default=e.exports}}]);